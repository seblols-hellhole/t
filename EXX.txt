game:GetService("StarterGui"):SetCore("SendNotification",{
    Title = "sup", -- Required
    Text = "don't use any of REAP/AGENT's scripts cuz they leaking user ids and u can get ip banned from tsb.", -- Required
    Icon = "rbxassetid://18257185083" -- Optional
}) 
            
            local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

            local Window = Rayfield:CreateWindow({
                Name = "EXX Hub",
                Icon = "smile-plus", -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
                LoadingTitle = "Welcome",
                LoadingSubtitle = "By @SSebastienS",
                Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
            
                DisableRayfieldPrompts = false, 
                DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
            
                ConfigurationSaving = {
                Enabled = true,
                FolderName = nil, -- Create a custom folder for your hub/game
                FileName = "Big Hub"
                },
            
                Discord = {
                Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
                Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
                RememberJoins = true -- Set this to false to make them join the discord every time they load it up
                },
            
                KeySystem = true, -- Set this to true to use our key system
                KeySettings = {
                Title = "EXX Hub",
                Subtitle = "KEY",
                Note = "key is in the discord link lol", -- Use this to tell the user how to get a key
                FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
                SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
                GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
                Key = {"KJ"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
                }
            })

            local PlayerTab = Window:CreateTab("Main", "home")

            local player = game.Players.LocalPlayer
            local walkSpeedValue = 16 -- Default speed
            local runService = game:GetService("RunService")
            local walkSpeedConnection
            
            local Toggle = PlayerTab:CreateToggle({
                Name = "Speed Enabled",
                CurrentValue = false,
                Flag = "Toggle1",
                Callback = function(Value)
                if Value then
                    -- Start updating WalkSpeed
                    walkSpeedConnection = runService.Heartbeat:Connect(function()
                        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                            player.Character.Humanoid.WalkSpeed = walkSpeedValue
                        end
                    end)
                else
                    -- Stop updating WalkSpeed
                    if walkSpeedConnection then
                        walkSpeedConnection:Disconnect()
                        walkSpeedConnection = nil
                    end
                end
                end,
            })
            
            local Slider = PlayerTab:CreateSlider({
                Name = "Speed",
                Range = {0, 2500},
                Increment = 5,
                Suffix = "WalkSpeed",
                CurrentValue = 16,
                Flag = "Slider1",
                Callback = function(Value)
                    walkSpeedValue = Value
                    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                        player.Character.Humanoid.WalkSpeed = Value
                    end
                end,
            })

            local player = game.Players.LocalPlayer
            local walkSpeedValue = 16 -- Default speed
            local runService = game:GetService("RunService")
            local walkSpeedConnection
            
            local Toggle = PlayerTab:CreateToggle({
                Name = "No Stun",
                CurrentValue = false,
                Flag = "Toggle2",
                Callback = function(Value)
                if Value then
                    -- Start updating WalkSpeed
                    walkSpeedConnection = runService.Heartbeat:Connect(function()
                        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                            player.Character.Humanoid.WalkSpeed = 25
                        end
                    end)
                else
                    -- Stop updating WalkSpeed
                    if walkSpeedConnection then
                        walkSpeedConnection:Disconnect()
                        walkSpeedConnection = nil
                    end
                end
                end,
            })
            
            local Button = PlayerTab:CreateButton({
            Name = "Lock On",
            Callback = function()
                local Players = game:GetService("Players")
                local UserInputService = game:GetService("UserInputService")
                local localPlayer = Players.LocalPlayer
                local camera = game.Workspace.CurrentCamera
                local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
                local head = character:WaitForChild("Head")
                local userCamera = camera
                
                local isFacingTarget = false
                local targetHead = nil
                local currentTargetPlayer = nil
                
                -- Function to get the nearest player besides yourself
                local function getNearestPlayer()
                    local closestPlayer = nil
                    local shortestDistance = math.huge
                
                    -- Loop through all players in the game
                    for _, player in pairs(Players:GetPlayers()) do
                        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Head") then
                            local headPosition = player.Character.Head.Position
                            local distance = (camera.CFrame.Position - headPosition).Magnitude
                
                            -- Find the closest player
                            if distance < shortestDistance then
                                closestPlayer = player
                                shortestDistance = distance
                            end
                        end
                    end
                
                    return closestPlayer
                end
                
                -- Function to rotate the player and camera towards the nearest player's head
                local function faceNearestPlayerHead()
                    local nearestPlayer = getNearestPlayer()
                    if nearestPlayer and nearestPlayer.Character then
                        local playerHead = nearestPlayer.Character.Head.Position
                        currentTargetPlayer = nearestPlayer
                        targetHead = playerHead
                
                        -- Rotate the character to face the nearest player's head
                        local direction = (playerHead - humanoidRootPart.Position).unit
                        character:SetPrimaryPartCFrame(CFrame.lookAt(humanoidRootPart.Position, playerHead))
                
                        -- Update the camera to follow the new rotation
                        userCamera.CFrame = CFrame.new(userCamera.CFrame.Position, playerHead)
                    end
                end
                
                -- Toggle the state on right-click
                UserInputService.InputBegan:Connect(function(input, gameProcessed)
                    if not gameProcessed then
                        if input.UserInputType == Enum.UserInputType.MouseButton2 then  -- Right-click
                            isFacingTarget = not isFacingTarget  -- Toggle state
                            if isFacingTarget then
                                -- Start facing nearest player
                                faceNearestPlayerHead()
                            else
                                -- Reset camera to normal
                                userCamera.CFrame = CFrame.new(humanoidRootPart.Position + Vector3.new(0, 5, 10), humanoidRootPart.Position)
                            end
                        end
                    end
                end)
                
                -- Update camera continuously if we're facing a target
                game:GetService("RunService").Heartbeat:Connect(function()
                    if isFacingTarget and currentTargetPlayer and currentTargetPlayer.Character then
                        local playerHead = currentTargetPlayer.Character.Head.Position
                        -- Make sure the camera continuously follows the target
                        userCamera.CFrame = CFrame.new(userCamera.CFrame.Position, playerHead)
                    end
                end)
                
            end,
            })
            
            local PlayerTab = Window:CreateTab("Movesets", "circle-plus") -- Title, Image

            local Section = PlayerTab:CreateSection("Universal Movesets")
    
         local Button = PlayerTab:CreateButton({
            Name = "ＳＴＡＲ ＧＬＩＴＣＨＥＲ",
            Callback = function()
                game:GetService("StarterGui"):SetCore("SendNotification",{
                    Title = "yo", -- Required
                    Text = "this has been disabled cuz REAP, and agent gonna leak userids and get u ip banned from tsb.", -- Required
                    Icon = "rbxassetid://18570837826" -- Optional
                })
            end,
         })

         local Button = PlayerTab:CreateButton({
            Name = "TRASHMAN",
            Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/yes1nt/yes/refs/heads/main/Trashcan%20Man", true))()
            end,
        })

            local Section = PlayerTab:CreateSection("KJ Movesets")

            local Button = PlayerTab:CreateButton({
                Name = "JK",
                Callback = function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/NetlessMade/KJ-TO-JK/refs/heads/main/script.lua"))()
                end,
            })

            local Section = PlayerTab:CreateSection("Saitama Movesets")

            
            local Button = PlayerTab:CreateButton({
            Name = "CHOI JONG IN ",
            Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nil071n/fireman/refs/heads/main/TSB"))()
            end,
            })

            local Button = PlayerTab:CreateButton({
            Name = "KYRA KJ",
            Callback = function()
            loadstring(game:HttpGet("https://gist.githubusercontent.com/GoldenHeads2/5fe3178dff916f988d319c3bd5e4fc01/raw/b250ee6f967c4e84195a76ab7915fb1d79b53326/gistfile1.txt"))()
            end,
            })

            local Button = PlayerTab:CreateButton({
            Name = "NARUTO",
            Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/LolnotaKid/NarutoBeatUpSasukeAss/refs/heads/main/NarutoCums"))()
            end,
            })

            local Button = PlayerTab:CreateButton({
            Name = "SHINJI",
            Callback = function()
                getgenv().speedtools = true --- set true if you want use this tool if you want to run
                getgenv().speedpunch= false --- tp and normal Punch
                getgenv().dance= true --- set true if you want to this dance song made by rebzyyx all I want is you 
                getgenv().night= false -- set true if you want to day to night 
                
                loadstring(game:HttpGet('https://raw.githubusercontent.com/Kenjihin69/Kenjihin69/refs/heads/main/Shinji%20tp%20exploit'))()
            end,
            })

            local Button = PlayerTab:CreateButton({
                Name = "SUKUNA",
                Callback = function()
                    getgenv().secret = false -- unknown (don't set true)
                    getgenv().Dance = true --- dance boppin
                    getgenv().fog = true ---set true if you want cool cloud
                    getgenv().infinitedash = true ---set true if you want infinite dash sigma
                    getgenv().night = false ---set true night 
                    loadstring(game:HttpGet('https://raw.githubusercontent.com/Kenjihin69/Kenjihin69/refs/heads/main/Sigma%20v2%20vessel%20tp'))()
                end,
            })

            local Button = PlayerTab:CreateButton({
                Name = "SUNG JIN WOO",
                Callback = function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/hamletirl/sunjingwoo/refs/heads/main/sunjingwoo"))()
                end,
            })

            local Button = PlayerTab:CreateButton({
            Name = "VEXOR",
            Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Reapvitalized/TSB/refs/heads/main/VEXOR.lua"))()
            end,
            })

            local Section = PlayerTab:CreateSection("Garou Movesets")

            local Button = PlayerTab:CreateButton({
            Name = "OKARUN", 
            Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Kenjihin69/Kenjihin69/refs/heads/main/Hero%20hunter%20to%20okarun%20fr"))()
            end,
            })

            local Button = PlayerTab:CreateButton({
                Name = "A-TRAIN", 
                Callback = function()
                    getgenv().settings = {
                        ["morph"] = {
                            ["enabled"] = false,
                            ["dontchangeskincolor"] = false,
                        },
                        ["ult_forcewalkspeed"] = true, -- forces walkspeed even if set to 0
                        ["ult_walkspeed"] = 64, -- how fast you walk in ult
                        ["tp_duration"] = 0.15 -- how long it takes to tp
                    } 
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/skibiditoiletfan2007/ATrainSounds/refs/heads/main/ATrain.lua"))()
                end,
                })

            local Section = PlayerTab:CreateSection("Sonic Movesets")

            local Button = PlayerTab:CreateButton({
            Name = "CHAINSAW MAN",
            Callback = function()
            loadstring(game:HttpGet("https://gist.githubusercontent.com/GoldenHeads2/0fd8d36993c850f3fac89e5adf793076/raw/ab4f5a42bd0b2e24a32a46301d533ea849ca771c/gistfile1.txt"))()
            end,
            })

            local Button = PlayerTab:CreateButton({
                Name = "1X1X1X1", 
                Callback = function()
                loadstring(game:HttpGet("https://gist.githubusercontent.com/GoldenHeads2/900e87ffc32f3c740930ccb106dd6abf/raw/358c5bf0f0a6aa25946718288dab006e3ae7e1d4/gistfile1.txt"))()
                end,
            })

            local Section = PlayerTab:CreateSection("Suiryu Movesets")

            local Button = PlayerTab:CreateButton({
                Name = "DEKU", 
                Callback = function()
                loadstring(game:HttpGet("https://github.com/aggiealledge/obfuscated-scripts/raw/refs/heads/main/deku%20suiryu%20thingy.txt"))()
                end,
            })

            local PlayerTab = Window:CreateTab("Misc", "circle-slash") -- Title, Image

            local Section = PlayerTab:CreateSection("GUI's")

            local Button = PlayerTab:CreateButton({
                Name = "Infinte Yield",
                Callback = function()
                loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
                end,
            })

            local Button = PlayerTab:CreateButton({
            Name = "Dex Explorer",
            Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/nuIIism/scripts/main/dex.lua"))()
            end,
            })

            local Section = PlayerTab:CreateSection("Other")
            
            local Button = PlayerTab:CreateButton({
            Name = "Control Teleport",
            Callback = function()
                local UIS = game:GetService("UserInputService")

                local Player = game.Players.LocalPlayer
                local Mouse = Player:GetMouse()
                
                
                function GetCharacter()
                    return game.Players.LocalPlayer.Character
                end
                
                function Teleport(pos)
                    local Char = GetCharacter()
                    if Char then
                        Char:MoveTo(pos)
                    end
                end
                
                
                UIS.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 and UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
                        Teleport(Mouse.Hit.p)
                    end
                end)
            end,
            })

            local Button = PlayerTab:CreateButton({
                Name = "Animation Logger",
                Callback = function()
                loadstring(game:HttpGet("https://pastebin.com/raw/BswWEij4"))()
                end,
                })

                local Button = PlayerTab:CreateButton({
                    Name = "Audio Logger",
                    Callback = function()
                        aa = game:GetObjects("rbxassetid://01997056190")[1]
                        aa.Parent = game.CoreGui
                        wait(0.2)
                        GUI = aa.PopupFrame.PopupFrame
                        pos = 0
                        
                        ignore = {
                            "rbxasset://sounds/action_get_up.mp3",
                            "rbxasset://sounds/uuhhh.mp3",
                            "rbxasset://sounds/action_falling.mp3",
                            "rbxasset://sounds/action_jump.mp3",
                            "rbxasset://sounds/action_jump_land.mp3",
                            "rbxasset://sounds/impact_water.mp3",
                            "rbxasset://sounds/action_swim.mp3",
                            "rbxasset://sounds/action_footsteps_plastic.mp3"
                        }
                        
                        GUI.Close.MouseButton1Click:connect(function()
                            GUI:TweenSize(UDim2.new(0, 360, 0, 0),"Out","Quad",0.5,true) wait(0.6)
                            GUI.Parent:TweenSize(UDim2.new(0, 0, 0, 20),"Out","Quad",0.5,true) wait(0.6)
                            aa:Destroy()
                        end)
                        
                        local min = false
                        GUI.Minimize.MouseButton1Click:connect(function()
                            if min == false then
                                GUI:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) min = true
                            else
                                GUI:TweenSize(UDim2.new(0, 360, 0, 260),"Out","Quad",0.5,true) min = false
                            end
                        end)
                        
                        function printTable(tbl)
                            if type(tbl) ~= 'table' then return nil end
                            local depthCount = -15
                        
                            local function run(val, inPrefix)
                                depthCount = depthCount + 15
                                -- if inPrefix then print(string.rep(' ', depthCount) .. '{') end
                                for i,v in pairs(val) do
                                    if type(v) == 'table' then
                                        -- print(string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = {')
                                        GUI.Store.Text = GUI.Store.Text..'\n'..string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = {'
                                        run(v, false)
                                        wait()
                                    else
                                        -- print(string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = ' .. tostring(v))
                                        GUI.Store.Text = GUI.Store.Text..'\n'..string.rep(' ', depthCount) .. ' [' .. tostring(i) .. '] = ' .. tostring(v)
                                        wait()
                                    end
                                end
                                -- print(string.rep(' ', depthCount) .. '}')
                                depthCount = depthCount - 15
                            end
                            run(tbl, true)
                        end
                        
                        function refreshlist()
                            pos = 0
                            GUI.Logs.CanvasSize = UDim2.new(0,0,0,0)
                            for i,v in pairs(GUI.Logs:GetChildren()) do
                                v.Position = UDim2.new(0,0,0, pos)
                                GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
                                pos = pos+20
                            end
                        end
                        
                        function FindTable(Table, Name)
                            for i,v in pairs(Table) do
                                if v == Name then
                                    return true
                                end end
                            return false
                        end
                        
                        function writefileExploit()
                            if writefile then
                                return true
                            end
                        end
                        
                        writeaudio = {}
                        running = false
                        GUI.SS.MouseButton1Click:connect(function()
                            if writefileExploit() then
                                if running == false then
                                    GUI.Load.Visible = true running = true
                                    GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
                                    for _, child in pairs(GUI.Logs:GetChildren()) do
                                        if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
                                            if bttn.BackgroundTransparency == 0 then
                                                writeaudio[#writeaudio + 1] = {NAME = child.NAME.Value, ID = child.ID.Value}
                                            end
                                        end
                                    end
                                    GUI.Store.Visible = true
                                    printTable(writeaudio)
                                    wait(0.2)
                                    local filename = 0
                                    local function write()
                                        local file
                                        pcall(function() file = readfile("Audios"..filename..".txt") end)
                                        if file then
                                            filename = filename+1
                                            write()
                                        else
                                            local text = tostring(GUI.Store.Text)
                                            text = text:gsub('\n', '\r\n')
                                            writefile("Audios"..filename..".txt", text)
                                        end
                                    end
                                    write()
                                    for rep = 1,10 do
                                    GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
                                    wait(0.05)
                                    end
                                    GUI.Load.Visible = false
                                    GUI.Load.BackgroundTransparency = 0
                                    GUI.Load.Size = UDim2.new(0, 0, 0, 20)
                                    running = false
                                    GUI.Store.Visible = false
                                    GUI.Store.Text = ''
                                    writeaudio = {}
                                    game:FindService('StarterGui'):SetCore('SendNotification', {
                                        Title = 'Audio Logger',
                                        Text = 'Saved audios\n(Audios'..filename..'.txt)',
                                        Icon = 'http://www.roblox.com/asset/?id=176572847',
                                        Duration = 5,
                                    })
                                end
                            else
                                game:FindService('StarterGui'):SetCore('SendNotification', {
                                    Title = 'Audio Logger',
                                    Text = 'Exploit cannot writefile :(',
                                    Icon = 'http://www.roblox.com/asset/?id=176572847',
                                    Duration = 5,
                                })
                            end
                        end)
                        
                        GUI.SA.MouseButton1Click:connect(function()
                            if writefileExploit() then
                                if running == false then
                                    GUI.Load.Visible = true running = true
                                    GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
                                    for _, child in pairs(GUI.Logs:GetChildren()) do
                                        writeaudio[#writeaudio + 1] = {NAME = child.NAME.Value, ID = child.ID.Value}
                                    end
                                    GUI.Store.Visible = true
                                    printTable(writeaudio)
                                    wait(0.2)
                                    local filename = 0
                                    local function write()
                                        local file
                                        pcall(function() file = readfile("Audios"..filename..".txt") end)
                                        if file then
                                            filename = filename+1
                                            write()
                                        else
                                            local text = tostring(GUI.Store.Text)
                                            text = text:gsub('\n', '\r\n')
                                            writefile("Audios"..filename..".txt", text)
                                        end
                                    end
                                    write()
                                    for rep = 1,10 do
                                        GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
                                        wait(0.05)
                                    end
                                    GUI.Load.Visible = false
                                    GUI.Load.BackgroundTransparency = 0
                                    GUI.Load.Size = UDim2.new(0, 0, 0, 20)
                                    running = false
                                    GUI.Store.Visible = false
                                    GUI.Store.Text = ''
                                    writeaudio = {}
                                    game:FindService('StarterGui'):SetCore('SendNotification', {
                                        Title = 'Audio Logger',
                                        Text = 'Saved audios\n(Audios'..filename..'.txt)',
                                        Icon = 'http://www.roblox.com/asset/?id=176572847',
                                        Duration = 5,
                                    })
                                end
                            else
                                game:FindService('StarterGui'):SetCore('SendNotification', {
                                    Title = 'Audio Logger',
                                    Text = 'Exploit cannot writefile :(',
                                    Icon = 'http://www.roblox.com/asset/?id=176572847',
                                    Duration = 5,
                                })
                            end
                        end)
                        
                        selectedaudio = nil
                        function getaudio(place)
                            if running == false then
                                GUI.Load.Visible = true running = true
                                GUI.Load:TweenSize(UDim2.new(0, 360, 0, 20),"Out","Quad",0.5,true) wait(0.3)
                                for _, child in pairs(place:GetDescendants()) do
                                    spawn(function()
                                        if child:IsA("Sound") and not GUI.Logs:FindFirstChild(child.SoundId) and not FindTable(ignore,child.SoundId) then
                                            local id = string.match(child.SoundId, "rbxasset://sounds.+") or string.match(child.SoundId, "&hash=.+") or string.match(child.SoundId, "%d+")
                                            if id ~= nil then		
                                                local newsound = GUI.Audio:Clone()
                                                if string.sub(id, 1, 6) == "&hash=" or string.sub(id, 1, 7) == "&0hash=" then
                                                    id = string.sub(id, (string.sub(id, 1, 6) == "&hash=" and 7) or (string.sub(id, 1, 7) == "&0hash=" and 8), string.len(id))
                                                    newsound.ImageButton.Image = 'rbxassetid://1453863294'
                                                end
                                                newsound.Parent = GUI.Logs
                                                newsound.Name = child.SoundId
                                                newsound.Visible = true
                                                newsound.Position = UDim2.new(0,0,0, pos)
                                                GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
                                                pos = pos+20
                                                local function findname()
                                                    Asset = game:GetService("MarketplaceService"):GetProductInfo(id)
                                                end
                                                local audioname = 'error'
                                                local success, message = pcall(findname)
                                                if success then
                                                    newsound.TextLabel.Text = Asset.Name
                                                    audioname = Asset.Name
                                                else
                                                    newsound.TextLabel.Text = child.Name
                                                    audioname = child.Name
                                                end
                                                local data = Instance.new('StringValue') data.Parent = newsound data.Value = child.SoundId data.Name = 'ID'
                                                local data2 = Instance.new('StringValue') data2.Parent = newsound data2.Value = audioname data2.Name = 'NAME'
                                                local soundselected = false
                                                newsound.ImageButton.MouseButton1Click:Connect(function()
                                                    if GUI.Info.Visible ~= true then
                                                        if soundselected == false then soundselected = true
                                                            newsound.ImageButton.BackgroundTransparency = 0
                                                        else soundselected = false
                                                            newsound.ImageButton.BackgroundTransparency = 1
                                                        end
                                                    end
                                                end)
                                                newsound.Click.MouseButton1Click:Connect(function()
                                                    if GUI.Info.Visible ~= true then
                                                        GUI.Info.TextLabel.Text = "Name: " ..audioname.. "\n\nID: " .. child.SoundId .. "\n\nWorkspace Name: " .. child.Name
                                                        selectedaudio = child.SoundId
                                                        GUI.Info.Visible = true
                                                    end
                                                end)
                                            end
                                        end
                                    end)
                                end
                            end
                            for rep = 1,10 do
                                GUI.Load.BackgroundTransparency = GUI.Load.BackgroundTransparency + 0.1
                                wait(0.05)
                            end
                            GUI.Load.Visible = false
                            GUI.Load.BackgroundTransparency = 0
                            GUI.Load.Size = UDim2.new(0, 0, 0, 20)
                            running = false
                        end
                        
                        GUI.All.MouseButton1Click:connect(function() getaudio(game)end)
                        GUI.Workspace.MouseButton1Click:connect(function() getaudio(workspace)end)
                        GUI.Lighting.MouseButton1Click:connect(function() getaudio(game:GetService('Lighting'))end)
                        GUI.SoundS.MouseButton1Click:connect(function() getaudio(game:GetService('SoundService'))end)
                        GUI.Clr.MouseButton1Click:connect(function()
                            for _, child in pairs(GUI.Logs:GetChildren()) do
                                if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
                                    if bttn.BackgroundTransparency == 1 then
                                        bttn.Parent:Destroy()
                                        refreshlist()
                                    end
                                end
                            end
                        end)
                        GUI.ClrS.MouseButton1Click:connect(function()
                            for _, child in pairs(GUI.Logs:GetChildren()) do
                                if child:FindFirstChild('ImageButton') then local bttn = child:FindFirstChild('ImageButton')
                                    if bttn.BackgroundTransparency == 0 then
                                        bttn.Parent:Destroy()
                                        refreshlist()
                                    end
                                end
                            end
                        end)
                        autoscan = false
                        GUI.AutoScan.MouseButton1Click:connect(function()
                            if autoscan == false then autoscan = true
                                GUI.AutoScan.BackgroundTransparency = 0.5
                                game:FindService('StarterGui'):SetCore('SendNotification', {
                                    Title = 'Audio Logger',
                                    Text = 'Auto Scan ENABLED',
                                    Icon = 'http://www.roblox.com/asset/?id=176572847',
                                    Duration = 5,
                                })
                            else autoscan = false
                                GUI.AutoScan.BackgroundTransparency = 0
                                game:FindService('StarterGui'):SetCore('SendNotification', {
                                    Title = 'Audio Logger',
                                    Text = 'Auto Scan DISABLED',
                                    Icon = 'http://www.roblox.com/asset/?id=176572847',
                                    Duration = 5,
                                })
                            end
                        end)
                        
                        game.DescendantAdded:connect(function(added)
                            wait()
                            if autoscan == true and added:IsA('Sound') and not GUI.Logs:FindFirstChild(added.SoundId) and not FindTable(ignore,added.SoundId) then
                                local id = string.match(added.SoundId, "rbxasset://sounds.+") or string.match(added.SoundId, "&hash=.+") or string.match(added.SoundId, "%d+")
                                if id ~= nil then		
                                    local newsound = GUI.Audio:Clone()
                                        if string.sub(id, 1, 6) == "&hash=" or string.sub(id, 1, 7) == "&0hash=" then
                                            id = string.sub(id, (string.sub(id, 1, 6) == "&hash=" and 7) or (string.sub(id, 1, 7) == "&0hash=" and 8), string.len(id))
                                            newsound.ImageButton.Image = 'rbxassetid://1453863294'
                                        end
                                        local scrolldown = false
                                        newsound.Parent = GUI.Logs
                                        newsound.Name = added.SoundId
                                        newsound.Visible = true
                                        newsound.Position = UDim2.new(0,0,0, pos)
                                        if GUI.Logs.CanvasPosition.Y == GUI.Logs.CanvasSize.Y.Offset - 230 then
                                            scrolldown = true
                                        end
                                        GUI.Logs.CanvasSize = UDim2.new(0,0,0, pos+20)
                                        pos = pos+20
                                        local function findname()
                                            Asset = game:GetService("MarketplaceService"):GetProductInfo(id)
                                        end
                                        local audioname = 'error'
                                        local success, message = pcall(findname)
                                        if success then
                                            newsound.TextLabel.Text = Asset.Name
                                            audioname = Asset.Name
                                        else 
                                            newsound.TextLabel.Text = added.Name
                                            audioname = added.Name
                                        end
                                        local data = Instance.new('StringValue') data.Parent = newsound data.Value = added.SoundId data.Name = 'ID'
                                        local data2 = Instance.new('StringValue') data2.Parent = newsound data2.Value = audioname data2.Name = 'NAME'
                                        local soundselected = false
                                        newsound.ImageButton.MouseButton1Click:Connect(function()
                                            if GUI.Info.Visible ~= true then
                                                if soundselected == false then soundselected = true
                                                    newsound.ImageButton.BackgroundTransparency = 0
                                                else soundselected = false
                                                    newsound.ImageButton.BackgroundTransparency = 1
                                                end
                                            end
                                        end)
                                        newsound.Click.MouseButton1Click:Connect(function()
                                            if GUI.Info.Visible ~= true then
                                                GUI.Info.TextLabel.Text = "Name: " ..audioname.. "\n\nID: " .. added.SoundId .. "\n\nWorkspace Name: " .. added.Name
                                                selectedaudio = added.SoundId
                                                GUI.Info.Visible = true
                                            end
                                        end)
                                        --230'
                                    if scrolldown == true then
                                        GUI.Logs.CanvasPosition = Vector2.new(0, 9999999999999999999999999999999999999999999, 0, 0)
                                    end
                                end
                            end
                        end)
                        
                        GUI.Info.Copy.MouseButton1Click:Connect(function()
                            if pcall(function() Synapse:Copy(selectedaudio) end) then	
                            else
                                local clip = setclipboard or Clipboard.set
                                clip(selectedaudio)
                            end
                            game:FindService('StarterGui'):SetCore('SendNotification', {
                                Title = 'Audio Logger',
                                Text = 'Copied to clipboard',
                                Icon = 'http://www.roblox.com/asset/?id=176572847',
                                Duration = 5,
                            })
                        end)
                        
                        GUI.Info.Close.MouseButton1Click:Connect(function()
                            GUI.Info.Visible = false
                            for _, sound in pairs(game:GetService('Players').LocalPlayer.PlayerGui:GetChildren()) do
                                if sound.Name == 'SampleSound' then
                                    sound:Destroy()
                                end
                            end
                            GUI.Info.Listen.Text = 'Listen'
                        end)
                        
                        GUI.Info.Listen.MouseButton1Click:Connect(function()
                            if GUI.Info.Listen.Text == 'Listen' then
                                local samplesound = Instance.new('Sound') samplesound.Parent = game:GetService('Players').LocalPlayer.PlayerGui
                                samplesound.Looped = true samplesound.SoundId = selectedaudio samplesound:Play() samplesound.Name = 'SampleSound'
                                samplesound.Volume = 5
                                GUI.Info.Listen.Text = 'Stop'
                            else
                                for _, sound in pairs(game:GetService('Players').LocalPlayer.PlayerGui:GetChildren()) do
                                    if sound.Name == 'SampleSound' then
                                        sound:Destroy()
                                    end
                                end
                                GUI.Info.Listen.Text = 'Listen'
                            end
                        end)
                        
                        function drag(gui)
                            spawn(function()
                                local UserInputService = game:GetService("UserInputService")
                                local dragging
                                local dragInput
                                local dragStart
                                local startPos
                                local function update(input)
                                    local delta = input.Position - dragStart
                                    gui:TweenPosition(UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y), "InOut", "Quart", 0.04, true, nil) 
                                end
                                gui.InputBegan:Connect(function(input)
                                    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                                    dragging = true
                                    dragStart = input.Position
                                    startPos = gui.Position
                                input.Changed:Connect(function()
                                    if input.UserInputState == Enum.UserInputState.End then
                                        dragging = false
                                    end
                                end)
                            end
                        end)
                        gui.InputChanged:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                                dragInput = input
                            end
                        end)
                        UserInputService.InputChanged:Connect(function(input)
                            if input == dragInput and dragging then
                                update(input)
                            end
                        end)
                        end)
                        end
                        drag(aa.PopupFrame)
                    end,
                    })
    

            local PlayerTab = Window:CreateTab("Credits", "gem") -- Title, Image

            local Section = PlayerTab:CreateSection("Owner - @SSebastienS")

            local Section = PlayerTab:CreateSection("Moveset Developers - GoldenHead, Kyra, and tpexploit")
